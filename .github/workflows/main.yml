# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:  
      #- name: Esegui i test
      #  run: python -m unittest discover -s tests/
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked:  "
          echo ${{ secrets.TELEGRAM_TOKEN }}
          echo "Trick to echo GitHub Actions Secret:  "
          echo ${{secrets.TELEGRAM_TOKEN}} | sed 's/./& /g' 
          
      - name: Settin user for Pull request
        run: |
          git config --local user.email "uni389908@studium.unict.it"
          git config --local user.name "Antonino698"

      - name: Creare il file localmente
        run: echo "BOT_CONFIG = {'__TOKEN':'$(echo ${{ secrets.TELEGRAM_TOKEN }})'}" > src/lib/token.py

      - name: Commit e Push
        run: |
          git add src/lib/token.py
          git commit -m "Aggiunto token.py"
          git push
  
      - name: Crea Richiesta di Pull
        run: |
          git config --local user.email "uni389908@studium.unict.it"
          git config --local user.name "Antonino698"      
          pull-request -m "Aggiunta token.py" -b main -h ${{ github.actor }}:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       
     
      #- name: Rimozione filse sensibili
      #  run: rm -rf src/token.py src/token.txt

        
      #- name: Esegui il tuo script Python
      #  run: python ufferellox-ale.py
